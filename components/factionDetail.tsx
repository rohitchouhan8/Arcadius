import { Faction } from "../models/types"
import Head from "next/head"
import Image from "next/image"

export default function FactionDetail({ faction }: { faction: Faction }) {
	const { homeImage } = faction
	return (
		<>
			<Head>
				<title>Arcadius - {faction.name.toString()} </title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				<meta
					name='viewport'
					content='width=device-width, initial-scale=1'
				/>
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className='flex flex-col gap-8 overflow-clip'>
				<div className='relative flex flex-col h-96 overflow-clip items-center justify-end'>
					<div className='absolute h-full w-full bg-gradient-to-t from-gray-900 to-transparent z-10' />
					<h1 className='text-5xl font-semibold z-10 left-0 right-0 mx-auto bottom-32'>
						{faction.name}
					</h1>
					<Image
						className='absolute top-1'
						src={homeImage.data}
						alt={homeImage.alt}
					/>
				</div>
				<p>{faction.description}</p>

				<div className='flex flex-col gap-4'>
					<h2 className='text-3xl text-gray-50'>
						{faction.heroes.length > 1 ? "Heroes" : "Hero"}
					</h2>

					{faction.heroes.map((hero) => {
						const { description, image, name, stats } = hero
						return (
							<div key={name} className={"flex flex-col gap-4"}>
								<div className='grid grid-cols-2 gap-4'>
									<div className='relative flex flex-col gap-4 self-stretch overflow-clip rounded-xl bg-gray-400 justify-end'>
										<Image
											className='absolute w-full h-full object-cover'
											src={image.data}
											alt={image.alt}
										/>
										<div className='absolute w-full h-full bg-gradient-to-t from-gray-900 to-transparent opacity-50' />

										<div className='flex flex-col items-start px-4 z-10 pb-2'>
											<h2 className='text-2xl text-gray-50'>
												{name}
											</h2>
										</div>
									</div>
									<div className='flex flex-col gap-2'>
										{Object.entries(stats).map(
											([key, value]) => {
												const statValueBGColor = () => {
													// Values range from 0 to 10
													// Make the colors a range of red to orange to amber to yellow
													if (value <= 3) {
														return "bg-red-800"
													}
													if (value <= 5) {
														return "bg-orange-800"
													}
													if (value <= 7) {
														return "bg-amber-700"
													}
													if (value <= 9) {
														return "bg-amber-500"
													}
													return "bg-yellow-400"
												}
												return (
													<div
														key={key}
														className='flex flex-col'
													>
														<label className='text-gray-500'>
															{key.toUpperCase()}{" "}
															<span className='text-gray-50'>
																{value}
															</span>
														</label>
														<div className='relative h-6 w-full bg-gray-800 rounded-br-lg  rounded-tl-lg overflow-clip'>
															<div
																className={`absolute h-full ${statValueBGColor()}`}
																style={{
																	width: `${
																		value *
																		10
																	}%`,
																}}
															/>
														</div>
													</div>
												)
											}
										)}
									</div>
								</div>
								<div className='flex flex-col gap-1'>
									{description.split("\n").map((t, i) => (
										<p key={i}>{t}</p>
									))}
								</div>
							</div>
						)
					})}
				</div>
			</div>
		</>
	)
}
